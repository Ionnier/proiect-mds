<!DOCTYPE html>
<html>

<head>
    <title>Home</title>
    <%- include("./fragments/head.ejs") %>
        <style>
            #clicker_button {
                height: 25%;
                width: 100%;
                padding: 15px 25px;
                font-size: 24px;
                text-align: center;
                cursor: pointer;
                outline: none;
                color: #fff;
                background-color: var(--color_primary);
                border: none;
                border-radius: 15px;
                box-shadow: 0 2vh var(--color_primary_alternative);
            }

            #clicker_button:hover {
                background-color: var(--color_secondary)
            }

            #clicker_button:active {
                background-color: var(--color_secondary_alternative);
                box-shadow: 0 1.5vh var(--color_primary_alternative);
                transform: translateY(0.5vh);
            }

            main {
                display: grid;
                grid-template-columns: auto 25% auto;
                grid-column-gap: 2.5vw;
                align-content: space-around;
                justify-content: space-between;
            }

            #services_div {
                display: flex;
                flex-direction: column;
            }

            .service .serviceName,
            .service .serviceDescription,
            .service .serviceLevel,
            .service .serviceValue,
            .service .servicePrice {
                text-align: center;
            }

            .service {
                margin-bottom: 3vh;
                display: flex;
                flex-direction: column;
                background-color: var(--color_primary_alternative);
                color: var(--color_secondary_alternative);
            }
        </style>

        <script>
            const map = new Map()
            async function getCurrentCredits() {
                try {
                    const response = await fetch("/api/credits");
                    const data = await response.json();
                    return data.data.credits
                } catch (e) {
                    console.log(e)
                }
            }
            async function updateViewCredits() {
                const currentCredits = await getCurrentCredits()
                if (currentCredits) {
                    document.getElementById('credits_score').innerHTML = `You currently have ${currentCredits} credits.`
                }
            }
            async function increaseCounter() {
                map.set('credits_score', false)
                fetch("/api/credits/increase").then(async (data) => {
                    const json = await data.json()
                    if (json.success == true) {
                        document.getElementById("credits_score").innerHTML = `You currently have ${json.data.credits} credits.`
                    } else {
                        alert(json.message)
                    }
                })
            }
            async function updateService(idService, automatic) {
                const div = document.getElementsByClassName(`service${idService}`)[0]
                if (!div)
                    return
                const service = await fetch(`/api/services/${parseInt(idService)}`)
                const serviceData = await service.json()
                if (!serviceData)
                    return
                if (serviceData.success) {
                    const obj = serviceData.data.data[0]
                    div.getElementsByClassName('serviceName')[0].innerHTML = `${obj.serviceName}`
                    div.getElementsByClassName('serviceDescription')[0].innerHTML = `Description: ${obj.serviceDescription}`
                    let price
                    let value
                    let level
                    if (obj.boughtservices && obj.boughtservices.length > 0) {
                        level = obj.boughtservices[0].serviceLevel
                        price = obj.serviceBasePrice * Math.pow(obj.servicePriceModifier, level)
                        value = obj.serviceBaseValue * Math.pow(obj.serviceValueModifier, level)
                    } else {
                        price = obj.serviceBasePrice
                        value = obj.serviceBaseValue
                        level = 0
                    }
                    div.getElementsByClassName('servicePrice')[0].innerHTML = `Price: ${price}`
                    div.getElementsByClassName('serviceValue')[0].innerHTML = `Value per Cycle: ${value}`
                    document.getElementById(`level${idService}`).innerHTML = `Level: ${level} (${obj.serviceMaxLevel})`
                }
                if (automatic) {
                    map.set(`service${idService}`, false)
                }
            }

            async function onChangeInput(args) {
                const data = await fetch(`/api/services/increase/${args}`)
                const json = await data.json()
                if (json.success == true) {
                    await updateService(args)
                    await updateViewCredits()
                } else {
                    alert(json.message)
                }
            }
            window.addEventListener('load', async () => {
                map.set('credits_score', true)
                for (let x of document.getElementsByClassName('service'))
                    for (let y of x.classList) {
                        if (y.includes('service') && y != 'service' && parseInt(y.replace('service', '')) != undefined) {
                            map.set(y, true)
                            break
                        }
                    }
                setInterval(async () => {
                    for (let [key, value] of map.entries()) {
                        if (value == true) {
                            if (key.includes('service')) {
                                updateService(parseInt(key.replace('service', '')), true)
                            } else {
                                updateViewCredits(true)
                            }
                        } else {
                            map.set(key, true)
                        }
                    }
                }, 60_000)
            }, false);
        </script>
</head>

<body>
    <%- include("./fragments/header.ejs") %>
        <h2>Play</h2>

        <main>

            <div id="info">
                <p id="credits_score"> You currently have <%- locals.user.userCredits%> credits.</p>
            </div>

            <div id="click_button">

                <button id="clicker_button" onclick="increaseCounter()">
                </button>
            </div>

            <% if(locals.services){ %>
                <div id="services_div">
                    <% for(let service of locals.services){ %>
                        <div class="service service<%-service.idService %> ">
                            <p class="serviceName">
                                <%- service.serviceName %>
                            </p>
                            <p class="serviceDescription">Description:
                                <%- service.serviceDescription %>
                            </p>
                            <% let price %>
                                <% let value %>
                                    <% let level %>
                                        <% if(service.boughtservices.length>0){ %>
                                            <% level=service.boughtservices[0].serviceLevel %>
                                                <% price=service.serviceBasePrice *
                                                    Math.pow(service.servicePriceModifier, level) %>
                                                    <% value=service.serviceBaseValue *
                                                        Math.pow(service.serviceValueModifier, level) %>
                                                        <% } else{ %>
                                                            <% price=service.serviceBasePrice %>
                                                                <% value=service.serviceBaseValue %>
                                                                    <% level=0 %>
                                                                        <%} %>
                                                                            <p class="servicePrice">
                                                                                Price: <%- price %>
                                                                            </p>
                                                                            <p class="serviceValue">
                                                                                Value per Cycle: <%- value %>
                                                                            </p>
                                                                            <p class="serviceLevel"
                                                                                id="level<%- service.idService %>">
                                                                                Level: <%- level %>
                                                                                    (<%-service.serviceMaxLevel %>)
                                                                            </p>
                                                                            <input type="button" value="Upgrade"
                                                                                onclick="onChangeInput(<%- service.idService%>)">

                        </div>
                        <% }%>

                </div>
                <% }%>
        </main>

</body>

</html>